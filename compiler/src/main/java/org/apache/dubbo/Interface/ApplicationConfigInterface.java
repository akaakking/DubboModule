package org.apache.dubbo.Interface;

import java.lang;
import java.util;

public interface ApplicationConfigInterface{
    String getName();
    void setName(String name);
    String getVersion();
    void setVersion(String version);
    String getOwner();
    void setOwner(String owner);
    String getOrganization();
    void setOrganization(String organization);
    String getArchitecture();
    void setArchitecture(String architecture);
    String getEnvironment();
    void setEnvironment(String environment);
    RegistryConfigInterface getRegistry();
    void setRegistry(RegistryConfigInterface registry);
    List getRegistries();
    void setRegistries(List registries);
    String getRegistryIds();
    void setRegistryIds(String registryIds);
    MonitorConfigInterface getMonitor();
    void setMonitor(String monitor);
    void setMonitor(MonitorConfigInterface monitor);
    String getCompiler();
    void setCompiler(String compiler);
    String getLogger();
    void setLogger(String logger);
    String getDumpDirectory();
    void setDumpDirectory(String dumpDirectory);
    Boolean getQosEnable();
    void setQosEnable(Boolean qosEnable);
    String getQosHost();
    void setQosHost(String qosHost);
    Integer getQosPort();
    void setQosPort(Integer qosPort);
    Boolean getQosAcceptForeignIp();
    void setQosAcceptForeignIp(Boolean qosAcceptForeignIp);
    Boolean getQosEnableCompatible();
    void setQosEnableCompatible(Boolean qosEnable);
    String getQosHostCompatible();
    void setQosHostCompatible(String qosHost);
    Integer getQosPortCompatible();
    void setQosPortCompatible(Integer qosPort);
    Boolean getQosAcceptForeignIpCompatible();
    void setQosAcceptForeignIpCompatible(Boolean qosAcceptForeignIp);
    Map getParameters();
    void setParameters(Map parameters);
    String getShutwait();
    void setShutwait(String shutwait);
    String getHostname();
    boolean isValid();
    String getMetadataType();
    void setMetadataType(String metadataType);
    Boolean getRegisterConsumer();
    void setRegisterConsumer(Boolean registerConsumer);
    String getRepository();
    void setRepository(String repository);
    Boolean getEnableFileCache();
    void setEnableFileCache(Boolean enableFileCache);
    String getRegisterMode();
    void setRegisterMode(String registerMode);
    Boolean getEnableEmptyProtection();
    void setEnableEmptyProtection(Boolean enableEmptyProtection);
    String getProtocol();
    void setProtocol(String protocol);
    Integer getMetadataServicePort();
    void setMetadataServicePort(Integer metadataServicePort);
    String getMetadataServiceProtocol();
    void setMetadataServiceProtocol(String metadataServiceProtocol);
    String getLivenessProbe();
    void setLivenessProbe(String livenessProbe);
    String getReadinessProbe();
    void setReadinessProbe(String readinessProbe);
    String getStartupProbe();
    void setStartupProbe(String startupProbe);
    void refresh();

}